[{"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\index.js":"1","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\reportWebVitals.js":"2","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\App.js":"3","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\OpeningApp.jsx":"4","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\PlayerStatsComponent.jsx":"5","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\service\\PlayerStatsDataService.js":"6","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\OpeningDetails.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":272,"mtime":1607818204652,"results":"11","hashOfConfig":"9"},{"size":695,"mtime":1607922315195,"results":"12","hashOfConfig":"9"},{"size":4563,"mtime":1609289839539,"results":"13","hashOfConfig":"9"},{"size":660,"mtime":1609288848231,"results":"14","hashOfConfig":"9"},{"size":3953,"mtime":1610320582305,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1k08km1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\index.js",[],["32","33"],"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\reportWebVitals.js",[],"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\App.js",[],"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\OpeningApp.jsx",[],"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\PlayerStatsComponent.jsx",["34","35"],"import React, { Component } from 'react';\r\nimport PlayerStatsDataService from '../service/PlayerStatsDataService';\r\nimport { Route , withRouter} from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nclass PlayerStatsComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            playerStats: [],\r\n            loaded: false,\r\n            overviewFetched: false,\r\n            playerUsername: \"\"\r\n        }\r\n        this.refreshStats = this.refreshStats.bind(this);\r\n        this.fetchDetails = this.fetchDetails.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    fetchDetails(playerUsername, name, gameIds) {\r\n        console.log('See details: ' + name);\r\n        this.props.history.push({\r\n            pathname: `/opening/stats/${name}`,\r\n            state: {\r\n                name: name,\r\n                playerUsername: playerUsername,\r\n                gameIds: gameIds\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshStats(playerUsername) {\r\n        PlayerStatsDataService.fetchPlayerStats(playerUsername)\r\n            .then(\r\n                response => {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        playerStats: response.data,\r\n                        playerUsername: playerUsername,     \r\n                        loaded: true\r\n                    })\r\n                }\r\n            );\r\n\r\n        PlayerStatsDataService.fetchOverview(playerUsername)\r\n        .then(\r\n            response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    playerOverview: response.data,\r\n                    overviewFetched: true\r\n                })\r\n            }\r\n        );    \r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(values);\r\n        this.refreshStats(values.playerUsername);\r\n    }\r\n\r\n    render() {\r\n        let { playerUsername } = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <Formik initialValues={{playerUsername}} onSubmit={this.onSubmit}>\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Chess.com username: </label>\r\n                                    <Field className=\"form-group\" type=\"text\" name=\"playerUsername\" />\r\n                                </fieldset>                               \r\n                                <button className=\"btn btn-success\" type=\"submit\">Get stats</button>  \r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>      \r\n                <p> </p>\r\n                {this.state.overviewFetched && \r\n                    <p>Overview: {this.state.playerOverview.style}</p>\r\n                }  \r\n                <p> </p>\r\n                {this.state.loaded && \r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Opening</th>\r\n                                <th>White won (%)</th>\r\n                                <th>White games</th>\r\n                                <th>Black won (%)</th>\r\n                                <th>Back games</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.playerStats.map(\r\n                                    stat =>\r\n                                        <tr key={stat.name} onClick={() => this.fetchDetails(this.state.playerUsername, stat.name, stat.gameIds)}>\r\n                                            <td>{stat.name}</td>\r\n                                            <td>{stat.totalWhite < 3 ? \"-\" : stat.winRateAsWhite + \"%\"}</td>\r\n                                            <td>{stat.totalWhite < 3 ? \"-\" : stat.totalWhite}</td>\r\n                                            <td>{stat.totalBlack < 3 ? \"-\" : stat.winRateAsBlack + \"%\"}</td>\r\n                                            <td>{stat.totalBlack < 3 ? \"-\" : stat.totalBlack}</td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }    \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(PlayerStatsComponent)","D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\service\\PlayerStatsDataService.js",[],"D:\\workspace\\create-react-app\\chessstatsfrontend\\src\\component\\OpeningDetails.jsx",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":15},{"ruleId":"42","severity":1,"message":"46","line":4,"column":31,"nodeType":"44","messageId":"45","endLine":4,"endColumn":43},{"ruleId":"47","severity":1,"message":"48","line":48,"column":66,"nodeType":"49","endLine":48,"endColumn":81},{"ruleId":"47","severity":1,"message":"48","line":77,"column":114,"nodeType":"49","endLine":77,"endColumn":129},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'ErrorMessage' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]